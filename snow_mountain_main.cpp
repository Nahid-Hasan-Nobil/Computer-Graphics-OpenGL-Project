#include <vector>
#include <cstdio>
#include <iostream>
#include <GL/glut.h>
#include <math.h>
#include<windows.h>
#include<mmsystem.h>
#include<cmath>
#include <ctime>
# define PI   3.14159265358979323846
#include<MMSystem.h>

using namespace std;


GLfloat bmove = 0.0f;



GLfloat bmanPosition = 0.0f;
GLfloat bmanSpeed = 0.2f;
void updatebman(int value)
{
    if (bmanPosition > 130)
    {
        bmanPosition = 0.0f;
    }
    bmanPosition += bmanSpeed;

    glutPostRedisplay();

    glutTimerFunc(7, updatebman, 0);
}



GLfloat bliftPosition = 50.0f;
GLfloat bliftSpeed = 0.30f;


void updateblift(int value) {

    bliftPosition -= bliftSpeed;
    if (bliftPosition < -105.0f) {
        bliftPosition = 50.0f;
    }


    glutPostRedisplay();
    glutTimerFunc(40, updateblift, 0);
}





void bcircle(double x1, double y1, double a, int r, int g, int b)
{
    glBegin(GL_POLYGON);
    for(int i=0; i<200; i++)
    {
        glColor3ub(r,g,b);
        float pi=3.1416;
        float A=(i*2*pi)/200;
        float r=a;
        float x = r * cos(A);
        float y = r * sin(A);
        glVertex2f(x+x1,y+y1);
    }
    glEnd();
}



void bline(double x1, double y1, double x2, double y2, GLfloat w, int r, int g, int b)
{
    glLineWidth(w); // Set the line width
    glBegin(GL_LINES); // Use GL_LINES (correct case)
    glColor3ub(r, g, b); // Set the color
    glVertex2f(x1, y1); // First vertex
    glVertex2f(x2, y2); // Second vertex
    glEnd(); // End drawing
}




void btriangle(double x1, double y1, double x2, double y2, double x3, double y3, int r, int g, int b)
{
    glBegin(GL_TRIANGLES);
    glColor3ub(r, g, b);
    glVertex2f(x1,y1);
    glVertex2f(x2,y2);
    glVertex2f(x3,y3);
    glEnd();
}

void brectangle(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, int r, int g, int b)
{
    glBegin(GL_POLYGON);
    glColor3ub(r, g, b);
    glVertex2f(x1, y1);
    glVertex2f(x2, y2);
    glVertex2f(x3, y3);
    glVertex2f(x4, y4);
    glEnd();
}








void bsun(){

bcircle(117.05778, 68.06729, 4, 255, 223, 0);


}


void bcloud(){

    //bcloud1
    bcircle(62.73614,65.99107, 1.5, 255, 250, 250);
    bcircle(64.48247, 65.93244, 1.5, 255, 250, 250);
    bcircle(66, 66, 1, 255, 250, 250);
    bcircle(61.13124, 65.93244, 1.5, 255, 250, 250);
    bcircle(59.63709, 65.90597, 1, 255, 250, 250);
    bcircle(62.69208, 66.85058, 1.5, 255, 250, 250);
    bcircle(62.73799, 65.01429, 1.5, 255, 250, 250);


    //bcloud2
    bcircle(80.88095, 71.96452, 2, 255, 250, 250);
    bcircle(83.20744, 72.27064, 1.3, 255, 250, 250);
    bcircle(78.43201, 71.9033, 1.3, 255, 250, 250);


    //bcloud3
    bcircle(93.75659, 66.04352, 1.5, 255, 250, 250);
    bcircle(95.85285, 65.28125, 1.5, 255, 250, 250);
    bcircle(98.07615, 65.40829, 1.5, 255, 250, 250);
    bcircle(100.11946, 66.61523, 1.5, 255, 250, 250);
    bcircle(98.01263, 67.44103, 1.5, 255, 250, 250);
    bcircle(95.5807, 67.45853, 1.5, 255, 250, 250);


     //bcloud4
    bcircle(45.06902, 72.75823, 1.2, 255, 250, 250);
    bcircle(43.71913, 71.97967, 1.1, 255, 250, 250);
    bcircle(45.13236, 71.53999, 1.2, 255, 250, 250);
    bcircle(46.38857, 72.23091, 1.1, 255, 250, 250);



        //bcloud5
    bcircle(15.91, 72.4989, 1, 255, 250, 250);
    bcircle(16.86557, 71.93148, 1, 255, 250, 250);
    bcircle(18.19667, 72.06522, 1, 255, 250, 250);
    bcircle(19.22173, 72.71574, 1, 255, 250, 250);
    bcircle(18.10661, 73.17252, 1, 255, 250, 250);
    bcircle(16.78957, 73.15801, 1, 255, 250, 250);


}



void bmountain(){


       //12th
     glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);

    glVertex2f(124.2601, 47.13839);
    glVertex2f(121.70529, 47.53482);
    glVertex2f(120.38383, 48.63604);
    glVertex2f(110, 40);
    glVertex2f(127.0792, 47.05029);
    glEnd();

    //11th
     glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);

    glVertex2f(114.96587, 48.10745);
    glVertex2f(116.19923, 49.25271);
    glVertex2f(123.20294, 44.80382);
    glVertex2f(101.33451, 36.30131);
    glVertex2f(113.42417, 50.08964);

    glEnd();



    //10th
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(85.40934, 32.95478);
    glVertex2f(111.22175, 49.38486);
    glVertex2f(117.0802, 42.77759);

    glEnd();



    /*
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);

    glVertex2f(115.03769, 48.23528);
    glVertex2f(116.64268, 49.6025);
    glVertex2f(120.80521, 44.31732);
    glVertex2f(113.93904, 41.26951);
    glVertex2f(28.08478, 52.41272);
    glVertex2f(110.81714, 50.1375);
     glVertex2f(111.70881, 48.71084);
    glVertex2f(113.55158, 50.49417);

    glEnd();
    */

          //9st
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(93.11773, 47.68415);
    glVertex2f(102.67327, 54.12027);
    glVertex2f(113.93904, 41.26951);
    glVertex2f(103.11307, 37.82418);

    glEnd();


      //8st
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(89.67295, 49.02134);
    glVertex2f(91.87144, 51.27768);
    glVertex2f(103.11307, 37.82418);
    glVertex2f(98.35103, 36.31756);
    glVertex2f(86.53073, 48.17791);


    glEnd();

     //7st
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(79.71891, 52.02938);
    glVertex2f(80.76469, 52.12649);
    glVertex2f(83.00278, 50.34827);
    glVertex2f(83.00278, 50.34827);
    glVertex2f(85.05692, 49.82707);
    glVertex2f(98.25901, 36.51342);
    glVertex2f(93.48544, 34.88679);
    glVertex2f(68.76391, 49.54978);
    glVertex2f(76.83375, 55.11125);

    glEnd();


     //6st
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(65.03389, 48.91729);
    glVertex2f(66.32246, 49.87428);
    glVertex2f(66.5, 49);
    glVertex2f(67.62365, 50.30801);
    glVertex2f(93.48544, 34.88679);
    glVertex2f(69.08766, 42.47013);
    glVertex2f(62.08881, 47.83538);
    glVertex2f(64.57992, 49.87651);

    glEnd();


     //5st
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(43.05501, 59.96619);
    glVertex2f(44.25549, 61.66512);
    glVertex2f(69.08766, 42.47013);
    glVertex2f(93.48544, 34.88679);
    glVertex2f(71.9973, 29.13011);

    glEnd();


     glBegin(GL_POLYGON);

    //4st
    glColor3ub(240, 240, 255);

    glVertex2f(28.94094, 64.22004);
    glVertex2f(34.7066, 68.331);
    glVertex2f(38.84178, 63.99885);
    glVertex2f(41.06877, 62.37375);
    glVertex2f(43.05501, 59.96619);
    glVertex2f(71.9973, 29.13011);
    glVertex2f(65.48028, 27.30937);

    glEnd();

    //3st
    glBegin(GL_POLYGON);
    glColor3ub(240, 240, 255);
    glVertex2f(38.79007, 35.76358);
    glVertex2f(24.85469, 66.56663);
    glVertex2f(26.51628, 67.72777);
    glVertex2f(65.48028, 27.30937);
    glVertex2f(57.32096, 24.77328);

    glEnd();


        //2nd
     glBegin(GL_POLYGON);
      glColor3ub(240, 240, 255);

    glVertex2f(22.71196, 66.37853);
    glVertex2f(24.35995, 67.99899);
    glVertex2f(38.79007, 35.76358);

    glEnd();



 glBegin(GL_POLYGON);

    //1st
    glColor3ub(240, 240, 255);

    glVertex2f(13.06186, 58.91269);
    glVertex2f(16.28989, 62.67872);
    glVertex2f(22.38727, 67.34143);
    glVertex2f(38.79007, 35.76358);
    glVertex2f(10.06799, 44.63963);
    glVertex2f(10.01317, 56.99978);

    glEnd();




}

void bshading(){



 //bshading1
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);

    glVertex2f(24.63584, 66.73498);
    glVertex2f(26.47017, 67.63176);
    glVertex2f(25.57339, 64.45226);
    glVertex2f(10.10903, 52.53203);
    glVertex2f(10.12366, 56.58193);
    glVertex2f(22.45979, 66.68864);
    glVertex2f(23.07666, 66.14147);
    glVertex2f(24.30974, 67.79482);
    glEnd();


 //bshading2
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);

    glVertex2f(34.59616, 49.71495);
    glVertex2f(36.76349, 46.65243);
    glVertex2f(36.76349, 46.65243);
    glVertex2f(41.56929, 45.99281);
    glVertex2f(35.96252, 50.98707);
    glVertex2f(30, 58);
    glVertex2f(29.08362, 57.86597);
    glVertex2f(25.42105, 61.41343);
    glVertex2f(26.6336, 59.27944);
    glVertex2f(27.48169, 58.38424);
    glVertex2f(28.14131, 56.4525);
    glVertex2f(32.47596, 50.98707);
    glEnd();

    //bshading3
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);

    glVertex2f(38.42117, 50.72343);
    glVertex2f(40.52844, 47.97108);
    glVertex2f(41.13942, 48.15859);
    glVertex2f(38.27373, 53.20524);
    glVertex2f(35.05538, 57.10513);
    glVertex2f(32, 60);
    glVertex2f(30.20892, 61.53509);
    glVertex2f(28.65728, 62.00854);
    glVertex2f(29.08898, 60.74371);
    glVertex2f(31.97035, 57.30327);

    glEnd();


     //bshading4
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);

    glVertex2f(28, 60);
    glVertex2f(27.32928, 62.24079);
    glVertex2f(24.78328, 64.70963);
    glVertex2f(23.74174, 63.89954);
    glEnd();

       //bshading5
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);

    glVertex2f(24.64101, 57.98252);
    glVertex2f(21.88719, 63.1059);
    glVertex2f(20.73443, 61.24867);
    glEnd();

         //bshading6
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(25.55523, 51.38389);
    glVertex2f(29.21072, 44.6712);
    glVertex2f(36.22243, 36.19452);
    glVertex2f(10.44545, 44.11095);
    glVertex2f(18.38265, 48.63494);
    glVertex2f(21.80747, 52.49238);
    glVertex2f(24.49952, 54.28708);
    glEnd();


          //bshading7
        glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(17.8611, 55.57271);
    glVertex2f(15.83967, 55.4423);
    glVertex2f(10, 50);
    glVertex2f(10.06799, 44.63963);
    glVertex2f(15.1876, 51.26903);
    glVertex2f(19.75211, 53.48608);
    glVertex2f(22.75165, 57.98539);
    glVertex2f(19.88253, 57.85497);
    glEnd();



    //bshading8
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(42.03927, 57.46169);
    glVertex2f(39.54334, 62.81072);
    glVertex2f(34.61612, 68.16456);
    glVertex2f(31.94027, 66.19573);
    glVertex2f(37.91957, 58.00609);
    glVertex2f(44.90745, 53.01475);
    glVertex2f(47.50295, 52.21613);
    glVertex2f(47.68716, 53.30422);
    glVertex2f(45.5692, 54.99074);
    glVertex2f(43.3728, 58.0108);
    glEnd();


     //bshading9
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(31.52596, 62.77871);
    glVertex2f(35.05994, 57.90488);
    glVertex2f(34.27836, 61.07161);
    glVertex2f(31.94027, 66.19573);
    glVertex2f(29.63464, 64.62298);
    glEnd();


     //bshading10
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(48.25794, 36.27298);
    glVertex2f(43.72702, 42.34634);
    glVertex2f(50.8608, 38.77945);
    glVertex2f(60, 40);
    glVertex2f(64.27526, 38.88105);
    glVertex2f(66.2163, 39.71292);
    glVertex2f(69.81058, 38.77051);
    glVertex2f(75.88147, 40.69913);
    glVertex2f(77.63395, 39.16571);
    glVertex2f(84.31528, 42.34208);
    glVertex2f(90.80604, 38.8277);
    glVertex2f(105.13131, 42.20167);
    glVertex2f(109.2924, 38.66031);
    glVertex2f(58.77807, 22.92047);
    glVertex2f(47.48672, 30.77804);
    glEnd();



     //bshading11
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(48.02189, 45.77277);
    glVertex2f(51.17954, 42.06597);
    glVertex2f(58.31857, 41.86004);
    glVertex2f(62.9864, 39.93799);
    glVertex2f(61.81945, 42.34055);
    glVertex2f(44.38109, 51.21833);
    glVertex2f(38.10981, 56.22018);
    glVertex2f(41.15744, 50.02874);
    glVertex2f(43.90322, 47.21431);

    glEnd();



     //bshading12
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(68.47797, 42.54648);
    glVertex2f(55.91602, 51.53892);
    glVertex2f(48.77698, 51.60756);
    glEnd();


        //bshading13
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(53.55168, 53.73137);
    glVertex2f(45.05679, 60.7451);
    glVertex2f(43.57563, 59.52532);
    glEnd();


     //bshading14
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(78.53647, 53.06305);
    glVertex2f(76.73177, 55.18622);
    glVertex2f(67.76135, 48.71054);
    glVertex2f(70.09685, 48.8167);
    glEnd();


      //bshading15
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(82.20389, 50.54293);
    glVertex2f(84.26191, 49.89303);
    glVertex2f(87.18646, 48.26828);
    glVertex2f(89.08201, 46.21026);
    glVertex2f(78.73775, 51.46362);
    glVertex2f(80.47082, 51.89689);
    glEnd();



       //bshading16
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(80.79577, 47.23927);
    glVertex2f(76.95052, 46.75184);
    glVertex2f(69.0434, 47.51006);
    glVertex2f(73.43023, 48.91818);
    glVertex2f(75.70488, 50.3263);
    glVertex2f(78.62943, 49.78471);
    glVertex2f(82.79963, 48.1058);
    glVertex2f(87.78221, 45.99362);
    glEnd();


    //bshading17
    glBegin(GL_POLYGON);
    //glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(86, 44);
    glVertex2f(83.68846, 45.48782);
    glVertex2f(82.46222, 44.21049);
    glVertex2f(91.35247, 41.14488);
    glVertex2f(92.85259, 41.04769);
    glVertex2f(88.32605, 43.84592);
    glEnd();


    //bshading18
    glBegin(GL_POLYGON);
    //glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);

    glVertex2f(80.78041, 43.75047);
    glVertex2f(70.37374, 40.78544);
    glVertex2f(81.36179, 46.13412);
    glEnd();

     //bshading19
    glBegin(GL_POLYGON);
    //glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);

    glVertex2f(76.44132, 45.84116);
    glVertex2f(66.26835, 45.12384);
    glVertex2f(73.57202, 43.29792);
    glEnd();


       //bshading20
    glBegin(GL_POLYGON);
    //glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);

    glVertex2f(90.85428, 47.66883);
    glVertex2f(89.53249, 45.23845);
    glVertex2f(89.53249, 48.73479);
    glVertex2f(91.80455, 51.27368);
    glVertex2f(93.0061, 49.83542);
    glEnd();


       //bshading21
    glBegin(GL_POLYGON);
    //glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);

    glVertex2f(92.54215, 47.23562);
    glVertex2f(102.58051, 53.96654);
    glVertex2f(104.84349, 51.52948);
    glEnd();


      //bshading22
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(102.94734, 45.57805);
    glVertex2f(101.96057, 44.0979);
    glVertex2f(91.70035, 45.48013);
    glVertex2f(95.42324, 46.99652);
    glVertex2f(98.0135, 46.37979);
    glVertex2f(103.00901, 48.97006);
    glVertex2f(109.23798, 44.65295);
    glEnd();


      //bshading23
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(98.23289, 43.28305);
    glVertex2f(105.1502, 43.81217);
    glVertex2f(96.16814, 41.73657);
    glVertex2f(91.35729, 43.25764);
    glVertex2f(98.23289, 43.28305);
    glEnd();


      //bshading24
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(111.22175, 49.38486);
    glVertex2f(111.8566, 48.58497);
    glVertex2f(107.16269, 46.70368);
    glEnd();


          //bshading25
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(113.42417, 50.08964);
    glVertex2f(114.96587, 48.10745);
    glVertex2f(109.14199, 45.17776);
    glEnd();


     //bshading26
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(118, 48);
    glVertex2f(111.95567, 44.87053);
    glVertex2f(116.19923, 49.25271);
    glEnd();


     //bshading27
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(120.38383, 48.63604);
    glVertex2f(122, 48);
    glVertex2f(116.99797, 45.57933);
    glEnd();


    //bshading27
     glBegin(GL_POLYGON);
    // glColor3ub(210, 230, 255);
    glColor3ub(190, 210, 255);


    glVertex2f(120.38383, 48.63604);
    glVertex2f(122, 48);
    glVertex2f(116.99797, 45.57933);
    glEnd();



    //bshading28
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);


    glVertex2f(113.5029, 43.83919);
    glVertex2f(107.09752, 41.44186);
    glVertex2f(109.53231, 43.31478);
    glVertex2f(113.7651, 45.15024);
    glVertex2f(119.87082, 45.71211);
    glVertex2f(117.39856, 44.70074);
    glEnd();



}





void bsnot1()
{

     //slowtrack1
     glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);

    glVertex2f(97.28951, 15.33596);
    glVertex2f(130, 11.42233);
    glVertex2f(130, 50);
    glVertex2f(124.75033, 46.05173);
    glVertex2f(93.48544, 34.88679);
    glVertex2f(76.541, 31.41278);
    glVertex2f(57.32096, 24.77328);
    glEnd();


      //shades
     glBegin(GL_POLYGON);
     //glColor3ub(210, 230, 255);
     glColor3ub(190, 210, 255);

    glVertex2f(124.75033, 46.05173);
    glVertex2f(107.89366, 39.94119);
    glVertex2f(121.77, 43.36073);
    glVertex2f(129.9569, 44.91803);
    glVertex2f(130, 50);
    glVertex2f(128, 48);
    glEnd();




     //shades
    glBegin(GL_POLYGON);
    glColor3ub(210, 230, 255);
    glVertex2f(100.00629, 15.54465);
    glVertex2f(129.89568, 17.82415);
    glVertex2f(129.90029, 12.3818);

    glEnd();





     //slowtrack1
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);

    glVertex2f(59.20857, 25.27407);
    glVertex2f(81.02922, 18.60547);
    glVertex2f(100.00629, 15.54465);
    glVertex2f(129.90029, 12.3818);
    glVertex2f(130, 10);
    glVertex2f(10, 10);
    glVertex2f(10, 44.63963);
    glVertex2f(25.33928, 40.38857);
    glVertex2f(38.79007, 35.76358);
    glEnd();


     //shades
     glBegin(GL_POLYGON);
     glColor3ub(210, 230, 255);
       glVertex2f(97.28951, 15.33596);
       glVertex2f(100.00629, 15.54465);
         glVertex2f(80.98045, 18.49602);
         glVertex2f(58.69022, 25.65781);
         glVertex2f(60.03145, 25.90472);
       glVertex2f(72.73105, 21.95697);
    glVertex2f(83.01909, 19.49163);

    glEnd();

    //shades2
    glBegin(GL_POLYGON);
    glColor3ub(210, 230, 255);
    glVertex2f(16.1972, 36.75639);
    glVertex2f(10.00, 38.76242);
    glVertex2f(10.00, 40.01737);

    glEnd();


     //shades3
    glBegin(GL_POLYGON);
    glColor3ub(210, 230, 255);
    glVertex2f(22.87401, 28.93375);
    glVertex2f(10.0785, 35.96329);
    glVertex2f(10, 34);

    glEnd();



      //shades3
    glBegin(GL_POLYGON);
    glColor3ub(210, 230, 255);
    glVertex2f(28.10008, 23.83383);
    glVertex2f(10.01045, 32.91556);
    glVertex2f(10.02769, 30.00716);

    glEnd();



       //shade4
     glBegin(GL_POLYGON);
     glColor3ub(210, 230, 255);
       glVertex2f(59.90412, 13.70283);
       glVertex2f(48.75295, 18.48191);
         glVertex2f(38.22513, 20.07493);
         glVertex2f(33.30753, 21.80648);
         glVertex2f(10.06868, 28.61686);
       glVertex2f(10, 10);
    glVertex2f(93.10713, 10.23226);

    glEnd();



       //shade5
    glBegin(GL_POLYGON);
    glColor3ub(190, 210, 255);
    glVertex2f(10, 10);
    glVertex2f(10.04027, 13.44088);
    glVertex2f(14.40438, 16.16533);
    glVertex2f(27.75991, 13.49422);
    glVertex2f(16.22573, 10.06795);

    glEnd();


    //path
    glBegin(GL_POLYGON);
    glColor3ub(190, 210, 255);
    glVertex2f(78.43114, 17.11197);
    glVertex2f(92.55987, 15.58386);
    glVertex2f(115.57381, 18.20889);
    glVertex2f(129.87289, 17.66332);
    glVertex2f(130.20744, 24.05178);
    glVertex2f(116.94759, 25.22905);
    glVertex2f(99.98871, 22.55345);
    glVertex2f(51.7181, 20.44277);
    glVertex2f(47.10991, 21.79099);
    glVertex2f(22.87401, 28.93375);
    glVertex2f(63.07505, 15.89609);

    glEnd();




}

 void bhouse(){

//bhouse1

  brectangle(15.49023,43.95003, 18.89057,44.10183, 19.01201,41.15689, 15.58131,41.12653, 139, 69, 19);
  brectangle(15.49023,43.95003, 18.89057,44.10183, 19.01201,41.15689, 15.58131,41.12653, 139, 69, 19);
  brectangle(15.49023,43.95003, 18.89057,44.10183, 19.01201,41.15689, 15.58131,41.12653, 139, 69, 19);

  btriangle (17.12968,45.89308,  15.49023,43.95003,  18.89057,44.10183,  169, 169, 169 );
  brectangle(16.31825, 43.24177,  18.43984, 43.3428,  18.47658, 41.61614,  16.35499, 41.58858, 139, 69, 19 );
  brectangle (16.18851,43.43391,  17.1904,43.49463,  17.28148,42.28022,  16.21888,42.28022, 50, 50, 50);


  //bhouse 2

  brectangle(34.55028, 38.29705,  37.3404, 38.33691,  37.38026, 35.58665,  34.55028, 35.5468,  255, 255, 204);
  btriangle ( 35.78591, 40.52915,  34.55028, 38.29705,   37.3404, 38.33691,  255, 255, 0);
brectangle(34.90901, 37.49988,   36.881, 37.49988,   36.9123, 36.15392,    34.97486, 36.17583,  255, 192, 203);
brectangle (34.6654, 37.07879,   35.39154, 37.09651,   35.40926, 36.67144,  34.70082, 36.61831,   0, 255,0);

//bhouse 3

 brectangle(47.04823, 32.79863,   49.25659, 32.66479,   49.22313, 30.38951,    47.08169, 30.52335,   139, 69, 19   );
  btriangle (48.15241, 34.53855,  47.04823, 32.79863,   49.25659, 32.66479,   0, 0, 0 );
brectangle(47.34525, 32.33661,   48.84768, 32.33661,   48.84768, 30.86833,   47.36745, 30.95392, 255, 0, 0);
brectangle (47.46355, 32.13599,   48.29003, 32.1456,   48.27081, 31.55937,    47.47316, 31.64586,    0, 0, 0 );

//bhouse 4

brectangle(90.25103, 34.88005,   91.24173, 35.12851,  91.40614, 34.09622,   90.35417, 33.88995,255, 255, 204  );
  btriangle (90.57192, 35.81121,   90.25103, 34.88005,   91.24173, 35.12851,   139, 69, 19);
brectangle( 90.38714, 34.74539,    91.11527, 34.92051,   91.19822, 34.35829,   90.53461, 34.2016,      255, 255, 255);
brectangle ( 90.50406, 34.66471,     90.85658, 34.74461,    90.91298, 34.5049,    90.6, 34.4,    50, 50, 50);


//turf

btriangle (53.8, 16.3, 23.05054, 19.48295,52.69912, 28.61426,  204, 120, 30);
bline(23.05054, 19.48295, 22.90292, 22.22363,5,   50, 60, 19);
bline(23.05054, 19.48295, 53.49225, 28.9134,5,   50, 60, 19);
bline(23.05054, 19.48295, 53.8, 16.3,2,   50, 60, 19);
bline(53.8, 16.3,53.95125, 17.38416,3,   50, 60, 19);
bline(52.699118639542064, 28.614256114652704, 56.13127, 20.34799,1,   50, 60, 19);
bline(56.13127, 20.34799,56.16565, 21.31364,2,   50, 60, 19);
bline(52.699118639542064, 28.614256114652704,53.8, 16.3,1,   50, 60, 19);








    }



    void btree3(){



// under tree 1 Left badhon
btriangle (  89.04617, 24.16351         ,   87.42271, 21.9063        , 90.08885, 21.75285        , 112,123, 179);
brectangle ( 88.84209, 22.3091 , 87.02395, 19.93143  ,  90.06966, 20.23756 ,90.39574, 21.4076 ,  112,123, 179);
btriangle (  88.66946, 20.52528            ,  87.19254, 18.91409          ,   90.06966, 18.72228       , 112,123, 179);

// under tree 2 left badhon

btriangle (    93.31955, 26.55589          ,    91.86247, 23.84208        ,  94.41237, 24.22456        , 112,123, 179);
btriangle (   93.15978, 24.93126          ,  90.81911, 20.63545         ,   95.36884, 20.66836       , 112,123, 179);
btriangle (   92.80211, 21.67123         ,  90.56645, 18.51895        ,   94.85892, 18.47424      , 112,123, 179);

//Right tree 3 under


   btriangle (   114, 26           ,  110.88826, 22.6813          ,   117.58083, 22.98354       , 112,123, 179);
  btriangle (   114.06965, 23.31663          ,  111.00536, 20.07795          ,   117.88132, 20.3769      , 112,123, 179);
 btriangle (   114.13275, 20.67402         ,  110.85, 16.45          ,  117.35643, 17.0157      , 112,123, 179);
 brectangle ( 108, 30             ,     106.43745, 26.8909       , 110.65343, 27.83994     ,   108.19217, 27.36371    , 112,123, 179);

 //
 btriangle (   108.05743, 24.98214           ,  105.27253, 21.20055          ,  111.51871, 21.76838        , 112,123, 179);
 btriangle (   108, 22           ,   104.94241, 18.49934         ,   112.50765, 18.82725       , 112,123, 179);
btriangle (   108.39714, 19.26992           ,  105.17779, 15.98635          ,    110.84418, 16.44614      , 112,123, 179);


//Right tree 4 under


btriangle (  102.37291, 23.98614            ,  100.16267, 20.50517          , 105.6595, 20.70691         , 112,123, 179);
 btriangle (  102.53471, 21.11995            ,   100, 18         ,   105.19243, 18.18095       , 112,123, 179);
 btriangle (    102.52733, 18.44477          ,    99.97819, 15.56646        ,  105.17779, 15.98635        , 112,123, 179);


  //Right tree 5 under

btriangle (      98.41707, 27.74906        ,      95.83781, 23.9884      ,   100.45, 25.25       , 112,123, 179);
btriangle (  98.24275, 25.07558            ,     95.98385, 22.51347       ,  100.56006, 22.77967        , 112,123, 179);
btriangle (   98.04164, 23.06023           ,    95.26239, 20.00726        ,    100.16267, 20.50517      , 112,123, 179);
btriangle (  97.80488, 20.63567            ,    95, 18        ,   99.98278, 17.63436       , 112,123, 179);




      btriangle (      125.54401, 30.70691        ,     127.63668, 33.3858       ,  129.78904, 31.52472        , 112,123, 179);

      btriangle (     127.31583, 36.19758         ,     124.94195, 32.8001       ,   130, 33.4       , 112,123, 179);
      btriangle (  126.77184, 40.10853            ,   124.04567, 35.51165        ,   129.9789, 35.70961       , 112,123, 179);

      btriangle (    126.5604, 42.99377          ,   124.06763, 38.3255         ,  130.00495, 38.64276        , 112,123, 179);

      btriangle (    126.35471, 44.87657          ,    124.65991, 42.08114        ,  128.75452, 42.41111        , 112,123, 179);





 //right side tree 2 UNDER


     btriangle (  120.81385, 27.43864            ,     117.58083, 22.98354       ,   124.50392, 23.4982       , 112,123, 179);

     btriangle ( 120.9251, 24.16557             ,     117.38008, 19.44626       ,  125.8, 20        , 112,123, 179);


    btriangle (   121.12275, 20.29881           ,  117.3685, 16.97266          , 127.30265, 17.78354        , 112,123, 179);


//
  btriangle (     128.20676, 26.01617         ,   126, 22.2         ,     129.9189, 22.1518     , 112,123, 179);
  btriangle (       128.00323, 22.90601       ,    126, 19.9        ,   129.93828, 19.89637       , 112,123, 179);


   btriangle (    127.83186, 20.80828          ,  125.51561, 17.64642          , 129.84097, 17.9909         , 112,123, 179);


    }




    void btree1(){















 //right side tree 2 UNDER color diff

       glBegin(GL_POLYGON);
    glColor3ub(112,123, 179);

  glVertex2f(  121.7595, 38.25257  );

glVertex2f(  118.84427, 33.89385   );
glVertex2f(  119.30907, 33.54059   );
glVertex2f( 121.22407, 35.45559  );

glVertex2f(   122.69286, 31.68137  );
glVertex2f(  123.38077, 31.81152  );

glVertex2f(   124.14305, 32.49943  );
glVertex2f(  122.80441, 33.54059   );
glVertex2f(   122.19087, 35.10234  );
glVertex2f(  123.58529, 34.06118   );
glVertex2f(   121.68888, 37.16608  );
glVertex2f(  121.7595, 38.25257   );
 glEnd();


 glBegin(GL_POLYGON);
    glColor3ub(112,123, 179);

  glVertex2f(  121.22407, 35.45559  );

glVertex2f(  116.91512, 30.26415   );
glVertex2f( 119.13893, 29.75453  );
glVertex2f( 121.47856, 32.44163  );

glVertex2f(   122.28522, 30.1176  );
glVertex2f( 123.05376, 31.32973  );

glVertex2f(   123.85195, 30.40423  );
glVertex2f( 119.13893, 29.75453   );
glVertex2f(  117.35415, 29.2588  );

 glEnd();

brectangle (     121.22407, 35.45559         ,   121.82142, 31.96409         , 122.30267, 31.37179     ,  122.69286, 31.68137     , 135, 206, 235);






//R8

  btriangle (      118.3933, 39.38995        ,     116, 36       ,   119.45219, 36.01158       , 112,123, 179);

  btriangle (  117.763, 36.54102            ,    115.24183, 33.28871        ,  118.67063, 33.54083        , 112,123, 179);

   btriangle (    116.86596, 33.92148          ,      114.29175, 30.2565      ,  119.02568, 30.91096        , 112,123, 179);

   //p16



   btriangle (      115.0771, 38.43727        ,        113.48458, 36.25573    ,      116.05879, 36.4957    , 112,123, 179);
  btriangle (    114.55353, 36.7793          ,    112.86476, 34.64568        ,    116.3993, 34.92323      , 112,123, 179);
   btriangle (     114.34072, 35.05643         ,        112.03039, 32.35682    ,   115.65743, 32.37198       , 112,123, 179);
  btriangle (      113.7532, 32.69808        ,     111.23329, 30.50124       ,   116, 31       , 112,123, 179);
  // btriangle (              ,            ,          , 112,123, 179);
 // btriangle (              ,            ,          , 112,123, 179);
  // btriangle (              ,            ,          , 112,123, 179);
 // btriangle (              ,            ,          , 112,123, 179);
  // btriangle (              ,            ,          , 112,123, 179);









//U18
  btriangle (   96.08654, 33.32292          ,  94.52132, 31.14617          ,   97.37436, 31.58198       , 112,123, 179);
  btriangle (    96, 32          ,    94.56078, 29.28081       ,   98.00463, 29.66346       , 112,123, 179);
  btriangle (     96, 30         ,    94.24988, 27.34364        ,   98.41707, 27.74906       , 112,123, 179);
   btriangle (  96, 28            ,      94.41237, 24.22456      ,   98.24275, 25.07558       , 112,123, 179);


  //F19
  btriangle (  100.31968, 34.98814            ,  98.81761, 32.66098          ,  101.35633, 32.78792        , 112,123, 179);
  btriangle (   100.0235, 33.29566           ,       98.50027, 30.84157     ,     101.71598, 30.9685     , 112,123, 179);
  btriangle (    99.96003, 31.45509          ,     98.07715, 28.72597       ,  102.03332, 29.06446        , 112,123, 179);
  btriangle (  99.93887, 29.48758            ,        98.4368, 26.39881    ,  102.668, 26.97002        , 112,123, 179);


   btriangle ( 99.69987, 26.56576             ,  100.87534, 26.72714          ,     100.45, 25.25     , 112,123, 179);


 //T19
  btriangle (    102.98497, 35.2402          ,   101.97587, 32.79508         ,    104.38217, 33.04736      , 112,123, 179);
  btriangle (     103.16756, 33.38087         ,     101.71598, 30.9685       , 104.73501, 31.17484         , 112,123, 179);
  btriangle (    103.02052, 31.46131          ,   101.38065, 29.11684         ,  104.95213, 29.29454        , 112,123, 179);
  btriangle (    103.08051, 29.58583          ,  102.39542, 27.4925          ,   105.57982, 27.99997       , 112,123, 179);


  btriangle (   104.25231, 28.17471           ,    103.84577, 26.18828        ,    105.9392, 26.75148      , 112,123, 179);
  btriangle (     104.75624, 27.00643         ,       103.45349, 24.74987     ,   106.82669, 25.21514       , 112,123, 179);

  //M20
  btriangle (       105.69386, 36.92329       ,  104.92898, 34.97082          ,    106.49901, 35.05134      , 112,123, 179);
 btriangle (     105.65361, 35.37339         ,   104.38217, 33.04736         ,  107.12396, 33.23424        , 112,123, 179);
  btriangle (      105.69084, 33.48006        ,  104.73501, 31.17484          ,  107.35477, 31.36934        , 112,123, 179);

   btriangle (  105.79832, 31.84679           ,   104.45559, 29.52274        , 106.82616, 29.78413        , 112,123, 179);
  btriangle (   105.66846, 30.26685        ,     104.74863, 27.97269    ,      106.91293, 28.21076  , 112,123, 179);
  btriangle (  105.73631, 28.59852           ,  105.10642, 26.93856        ,107.21101, 27.40543         , 112,123, 179);




  //w20
  btriangle (   107.47155, 36.66677           , 106.49901, 35.05134           ,   108.3742, 35.16236       , 112,123, 179);
  btriangle (     107.56558, 35.50085         ,    105.69084, 33.48006        , 109.20942, 33.73367         , 112,123, 179);
   btriangle (    107.84632, 34.00629          ,     105.92326, 31.66242       , 109.78496, 31.90105         , 112,123, 179);
  btriangle (  107.90709, 32.31194            ,       106.64469, 29.29174     ,   110.14427, 29.7232       , 112,123, 179);
  btriangle (    109.78496, 31.90105          ,   108.90139, 29.84439         ,111.88725, 30.25623          , 112,123, 179);

  //j21
  btriangle (   108.81168, 37.60489           , 108.3742, 35.16236           ,  110.23711, 35.39335        , 112,123, 179);
  btriangle (    109.20477, 35.52514          ,     108.16448, 33.81106       ,  110.8479, 34.03927        , 112,123, 179);


   btriangle (109.70189, 34.17672              , 108.27884, 31.41958           ,   112.20209, 32.05204       , 112,123, 179);



//M22
   btriangle ( 85.9335, 32.21203             , 83, 30           , 87.30725, 30.35831         , 112,123, 179);
   btriangle (    85.22181, 30.73898          ,  83.666, 27.97494          , 87.57207, 28.23976         , 112,123, 179);
     btriangle (     85.40387, 28.68664         ,     83.79841, 25.9226       ,  88.7141, 26.28672        , 112,123, 179);
   btriangle (     86.03117, 26.69426         ,    83.68833, 23.78914        ,  88.25687, 24.25771        , 112,123, 179);
   btriangle (    86.00774, 24.65599          ,    83.85233, 21.72744        ,     88.25687, 22.31315     , 112,123, 179);
    //brectangle (     85.54657, 22.38984         , 86.52552, 22.47883           , 86.70338, 20.757     , 85.75093, 20.37964      , 112,123, 179);
  btriangle (   85.80185, 22.7339           ,    84.30002, 19.80405        ,       87.89572, 21.20724   , 112,123, 179);

//H23
  btriangle (    82.18449, 29.95603          ,   80.41019, 27.57137         ,  83.666, 27.97494        , 112,123, 179);
   btriangle (    82.07094, 28.43723          ,  80.22567, 25.68352          ,   83.79841, 25.9226       , 112,123, 179);
   btriangle (  81.94319, 26.42163            ,   79.84242, 23.48339         ,   83.68833, 23.78914       , 112,123, 179);
   btriangle (  81.77594, 24.2388            ,  79.24295, 21.09789          ,   83.85233, 21.72744       , 112,123, 179);
   //brectangle (     81.3023, 21.99998         ,   82.13683, 22.09816         , 82.2941, 19.67503     ,   81.43699, 19.88322    , 112,123, 179);
btriangle (     81.74636, 22.13807         ,     80.41922, 20.12643       ,  83.00426, 19.5005        , 112,123, 179);



  btriangle (    90, 32          , 87.99841, 29.44045           ,    91.29466, 29.44045      , 112,123, 179);
 btriangle (      89.58061, 30.26451        ,     87.63582, 27.42974       ,  91.55836, 27.59455        , 112,123, 179);
   btriangle (    89.58061, 28.08899          ,   87.5699, 24.79274         ,   91.98687, 25.28717       , 112,123, 179);
  btriangle (  89.88349, 25.65671            ,89.0738, 21.67722            ,     91.99934, 22.81579     , 112,123, 179);
  // btriangle (              ,            ,          , 112,123, 179);





    }

    void btree2(){

        btriangle(28.12655, 52.27821, 26.8236, 49.79014, 29.10918, 49.43891, 112, 123, 179);
     btriangle(28.01245, 50.28358,26.07115, 47.72384,30.14961, 47.49407,112, 123, 179);
     btriangle(28.1391, 48.52804,26.07115, 45.94311,31.29847, 45.08146,112, 123, 179);
     btriangle(28.18348, 46.65567,25.20716, 44.13724,30.83663, 42.60564,112, 123, 179);
     btriangle(28.31143, 44.62192,25.55417, 42.43908,29.88596, 41.54581,112, 123, 179);
     btriangle(28.54121, 43.35817,24.26242, 40.94337,30.0139, 39.3281,112, 123, 179);
     btriangle(39.69809, 49.91015,38.06303, 47.33368,40.41653, 47.38323,112, 123, 179);
     btriangle(39.47513, 48.15121,36.79957, 44.55902,41.43589, 44.85918,112, 123, 179);
     btriangle(38.97966, 45.87203,36.47751, 42.42849,42.27456, 42.18075,112, 123, 179);
     btriangle(39.27595, 43.54794,36.49799, 40.17754,42.27542, 40.06207,112, 123, 179);
     btriangle(39.52262, 40.89554,37.37914, 37.64717,43.6549, 35.26062,112, 123, 179);
     btriangle(40, 38,37.7,36.6,42.1,34.2,112, 123, 179);


btriangle(21.33684, 50.55533,20.37697, 48.48077,22.45152, 48.38788,112, 123, 179);
     btriangle(21.46069, 49.00715,19.88155, 46.65392,22.88501, 46.53006,112, 123, 179);
     btriangle(21.30587, 47.21126,19.54095, 44.67225,22.66827, 44.42454,112, 123, 179);
     btriangle(20.74853, 45.1367,18.79782, 42.38095,23.16369, 41.483,112, 123, 179);
     btriangle(24, 46,23.186, 44.26654,24.62824, 44.19258,112, 123, 179);
     btriangle(23.98108, 44.58088,23.13053, 43.12015,24.7022, 43.06468,112, 123, 179);
     btriangle(24.129, 43.32354,23.33392, 42.14017,24.86861, 42.04771,112, 123, 179);
     btriangle(24.14889, 42.34952,22.97443, 41.16558,24.51828, 41.16558,112, 123, 179);
     btriangle(34.50306, 46.5135,32.29068, 43.57467,35.75784, 43.73977,112, 123, 179);
     btriangle(34.23889, 44.66435,31.69631, 42.08875,35.46065, 42.12177,112, 123, 179);
     btriangle(33.6115, 42.91426,31.59725, 40.04147,35.49367, 40.27262,112, 123, 179);
     btriangle(33.70294, 41.29189,32.24457, 38.34379,35.49367, 38.02722,112, 123, 179);
     btriangle(11.76121, 55.67085,10.30475, 53.16439,13.11605, 52.96117,112, 123, 179);
     btriangle(11.69347, 53.94343,10.30475, 50.75955,13.25154, 50.82729,112, 123, 179);
     btriangle(11.69347, 51.60632,10.33862, 48.79502,13.42089, 48.69341,112, 123, 179);
     btriangle(11.93056, 49.33696,10.44024, 46.79663,13.08218, 46.45792,112, 123, 179);
     btriangle(11.76121, 47.16921,10.1354, 44.96759,13.31928, 43.91758,112, 123, 179);
     btriangle(16.87945, 53.02786,14.96827, 49.80902,18, 50,112, 123, 179);
     btriangle(16.37651, 50.61373,14.93474, 47.52902,18.25416, 47.26078,112, 123, 179);
     btriangle(16.57768, 48.3002,14.80062, 45.78548,18.22063, 45.51725,112, 123, 179);
     btriangle(16.64474, 46.62372,14.56591, 43.60607,19.15945, 42.60018,112, 123, 179);
     btriangle(45.84997, 40.77595,43.92174, 37.22938,46.95182, 36.88505,112, 123, 179);
     btriangle(45.16132, 38.0902,43.68071, 35.19784,46.53863, 34.99125,112, 123, 179);
     btriangle(44.95472, 35.8865,43.23308, 33.61394,46.67636, 31.8923,112, 123, 179);
     btriangle(51.55375, 39.10299,49.60335, 36.61552,52.28869, 35.51312,112, 123, 179);
     btriangle(50.93188, 36.89819,48.52921, 33.98671,51.83642, 32.62991,112, 123, 179);
     btriangle(50.53615, 33.98671,47.68121, 31.07524,51.92122, 29.12484,112, 123, 179);
     btriangle(54.922, 36.6934,53.37453, 33.62155,56.74663, 32.88246,112, 123, 179);
     btriangle(55.01438, 33.968,53.14356, 31.12712,56.79282, 30.27255,112, 123, 179);
     btriangle(54.8989, 31.49667,52.82021, 28.67888,55.93825, 27.2007,112, 123, 179);
     btriangle(59.19802, 32.155,58.41429, 30.19568,60, 30,112, 123, 179);
     btriangle(59.28199, 30.64352,57.96645, 29.02009,60.14969, 28.51626,112, 123, 179);
     btriangle(59.05807, 29.21602,57.71453, 28.18038,59.75783, 27.20072,112, 123, 179);
     btriangle(59.00209, 27.98444,56.87483, 26.6689,60.00974, 25.38135,112, 123, 179);
     btriangle(61.3178, 31.61671,60.97149, 29.67779,62.6083, 30.13814,112, 123, 179);
     btriangle(61.78989, 30.34274,61.24429, 27.80228,62.96635, 28.51838,112, 123, 179);
     btriangle(62, 29,61.46594, 26.21662,64, 27,112, 123, 179);
     //small tree
     btriangle(69.00255, 31.26035,68.94359, 28.56788,69.53318, 28.74476,112, 123, 179);
     btriangle(69.77454, 32.36098,70, 29,70.51561, 29.23205,112, 123, 179);
     btriangle(70.78802, 31.85965,70.96629, 29.43509,71.47735, 29.72034,112, 123, 179);
     btriangle(71.49267, 32.2903,71.93226, 29.91155,72.40996, 30.17478,112, 123, 179);
     btriangle(72.56163, 32.72765,72.99514, 30.24863,73.88419, 30.57702,112, 123, 179);
     btriangle(73.78837, 33.5271,74.23548, 30.68442,75, 31,112, 123, 179);
     btriangle(75.54051, 33.2911,75.65549, 30.99159,76.78225, 31.4515,112, 123, 179);
     btriangle(77.49877, 33.97934,77.91613, 31.69777,79.11257, 32.05949,112, 123, 179);
     btriangle(79.43833, 34.6677,80.0876, 32.25997,81.49437, 32.4764,112, 123, 179);
     btriangle(81.85712, 35.20238,82.34693, 32.63807,83.87399, 32.98382,112, 123, 179);
     btriangle(83.71131, 35.82341,83.87399, 32.98382,86.3615, 33.45353,112, 123, 179);
     btriangle(86.6381, 36.39369,86.3615, 33.45353,88.6989, 34.03344,112, 123, 179);
     btriangle(89.16204, 37.03866,89.22447, 34.13638,91.35106, 34.39475,112, 123, 179);
     btriangle(91.61306778720437, 37.59471745125204,92.03568, 34.46855,94.0238, 34.97129,112, 123, 179);
     btriangle(94.26452, 38.6973,94.86831, 35.38955,97.336, 36.09836,112, 123, 179);




    }


    void bpiller(){

       //bpiller1
    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);

    glVertex2f(42.28837, 57.77463);
    glVertex2f(41.07863, 58.06889);
    glVertex2f(40.91515, 59.11515);
    glVertex2f(43.36732, 59.14785);
    glVertex2f(43.30193, 58.23237);

    glEnd();

     brectangle(40.91515, 59.11515,41.07863, 60.32489,43.07306, 60.39028,43.36732, 59.14785,204, 85, 0);
    bline(40.29317, 58.97562,44.13818, 59.07043, 9, 70, 80, 90);
    bline(42.28837, 57.77463, 42.44845, 34.9302, 9, 70, 80, 90);
    brectangle(41.54606, 33.06308,41.28577, 34.90743,43.81815, 34.98417, 43.78824, 32.98834,204, 85, 0);
    btriangle(41.20941, 56.40141,41.07863, 58.06889,42.28837, 57.77463,70, 80, 90);
    btriangle(43.59619, 56.98993,42.28837, 57.77463,43.30193, 58.23237, 70, 80, 90);



    //bpiller2
    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);

    glVertex2f(99.7484, 56.42498);
    glVertex2f(98.55343, 56.8052);
    glVertex2f(98.01026, 59.00503);
    glVertex2f(101.32359, 59.00503);
    glVertex2f(100.97053, 56.91383);

    glEnd();

     brectangle(98.01026, 59.00503,98.35194, 60.43132,100.9834, 60.43132,101.32359, 59.00503,204, 85, 0);
    bline(96.99563, 58.96591,102.33182, 58.99767, 9, 70, 80, 90);
    bline(99.7484, 56.42498, 100.04657, 37.35266, 9, 70, 80, 90);
    brectangle(101.36228, 36.08716,98.68216, 36.08005,98.60466, 37.59774,101.45131, 37.59774,204, 85, 0);
    btriangle(98.29802, 55.88554,98.55343, 56.8052,99.7484, 56.42498,70, 80, 90);
    btriangle(100.96582, 55.73473, 99.7484, 56.42498, 100.97053, 56.91383, 70, 80, 90);



    //wire
    bline(130, 57.09187,9.9628, 57.09133, 2, 70, 80, 90);
    bline(130.02205, 55.9237, 10, 55.9389, 2, 70, 80, 90);




    }




    void blift(){

    glPushMatrix();
    glTranslatef(bliftPosition, 0.0f, 0.0f);

    //people
    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);



    glVertex2f(112.64162, 52.39154);
    glVertex2f(112.50802, 52.69281);
    glVertex2f(112.61136, 53.0416);
    glVertex2f(112.94723, 53.13202);
    glVertex2f(113.22931, 53.02663);
    glVertex2f(113.32592, 52.81584);
    glVertex2f(113.08, 52.39426);
    glVertex2f(113.30162, 52.29786);
    glVertex2f(113.46353, 52.14851);
    glVertex2f(113.56137, 50.78624);
    glVertex2f(112.318, 50.75217);
    glVertex2f(112.26933, 52.11487);
    glVertex2f(112.42446, 52.30212);
    glEnd();


    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);



    glVertex2f(114.64162, 52.39154);
    glVertex2f(114.50802, 52.69281);
    glVertex2f(114.61136, 53.0416);
    glVertex2f(114.94723, 53.13202);
    glVertex2f(115.22931, 53.02663);
    glVertex2f(115.32592, 52.81584);
    glVertex2f(115.08, 52.39426);
    glVertex2f(115.30162, 52.29786);
    glVertex2f(115.46353, 52.14851);
    glVertex2f(115.56137, 50.78624);
    glVertex2f(114.318, 50.75217);
    glVertex2f(114.26933, 52.11487);
    glVertex2f(114.42446, 52.30212);
    glEnd();

     //blines
     btriangle(114.35001, 54.45574, 114, 55, 114.67081, 55.00989, 70, 80, 90);
     bcircle(114.33272, 55.74354, 0.3, 70, 80, 90);
    bline(114.33272, 55.74354,114.34607, 54.58643, 2, 70, 80, 90);
    bline(112.24741, 54.34735,114.34607, 54.58643, 2, 70, 80, 90);
    bline(116.33404, 54.40411,114.34607, 54.58643, 2, 70, 80, 90);
    bline(116.33404, 54.40411,116.84253, 52.47938, 2, 70, 80, 90);
    bline(112.24741, 54.34735,111.80354, 52.40687, 2, 70, 80, 90);
    bline(116.84253, 52.47938,111.80354, 52.40687, 9, 160, 82, 45);
    bline(112.0573, 49.833,111.80354, 52.40687, 2, 70, 80, 90);
    bline(116.84253, 52.47938,116.69752, 49.79674, 2, 70, 80, 90);
    brectangle(116.69752, 49.79674,112.0573, 49.833,111.96667, 50.86617,116.69752, 50.86617,160, 82, 45);

     glPopMatrix();


    }



    void bman(){

    glPushMatrix();
    glTranslatef(bmanPosition, 0.0f, 0.0f);


    //leftstick
    bline(52.5, 25,48.28414, 21.98169, 2, 70, 80, 90);

     //head
     glBegin(GL_POLYGON);
    glColor3ub(135, 206, 235);



    glVertex2f(51.39082, 26.96372);
    glVertex2f(51.34754, 27.21967);
    glVertex2f(51.36852, 27.5763);
    glVertex2f(51.55033, 27.86999);
    glVertex2f(52.00486, 27.93293);
    glVertex2f(52.36149, 27.78608);
    glVertex2f(52.56428, 27.60427);
    glVertex2f(52.63421, 27.30358);
    glVertex2f(52.52232, 27.06583);
    glVertex2f(52.34562, 26.76953);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);


    glVertex2f(52.52232, 27.06583);
    glVertex2f(52.23187, 27.14077);
    glVertex2f(52.12788, 27.41808);
    glVertex2f(52.33556, 27.53169);
    glVertex2f(52.56428, 27.60427);
    glVertex2f(52.63421, 27.30358);
    glEnd();





     //scurf
     glBegin(GL_POLYGON);
    glColor3ub(255, 102, 102);


    glVertex2f(51.37122, 26.64885);
    glVertex2f(51.07298, 26.79689);
    glVertex2f(51.15373, 27.05158);
    glVertex2f(51.69963, 27.05158);
    glVertex2f(52.28193, 26.9333);
    glVertex2f(52.34562, 26.76953);
    glVertex2f(52.06356, 26.52458);
    glEnd();



     //leftfoot
    glBegin(GL_POLYGON);
    glColor3ub(204, 85, 0);

    glVertex2f(50.9651, 20.38162);
    glVertex2f(50.75435, 20.22005);
    glVertex2f(50.84567, 20.07253);
    glVertex2f(51.77295, 19.87583);
    glVertex2f(51.95145, 19.92683);
    glVertex2f(51.88345, 20.06283);
    glVertex2f(51.43295, 20.66634);
    glVertex2f(51.13369, 20.69774);
    glEnd();


    //rightfoot
    glBegin(GL_POLYGON);
    glColor3ub(204, 85, 0);

    glVertex2f(52.51764, 19.99025);
    glVertex2f(52.30168, 19.84628);
    glVertex2f(52.41206, 19.7167);
    glVertex2f(53.3383, 19.50553);
    glVertex2f(53.50627, 19.52953);
    glVertex2f(53.46781, 19.68176);
    glVertex2f(53.11305, 20.29704);
    glVertex2f(52.61842, 20.35979);
    glEnd();


    //lefthend
    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);

    glVertex2f(53.36994, 25.65881);
    glVertex2f(53.56099, 25.8328);
    glVertex2f(53.73498, 25.86351);
    glVertex2f(53.8578, 25.73387);
    glVertex2f(53.89192, 25.55988);
    glVertex2f(53.8271, 25.44729);
    glVertex2f(53.63946, 25.41318);
    glVertex2f(53.43476, 25.47117);
    glEnd();



    //righthand
    glBegin(GL_POLYGON);
    glColor3ub(70, 80, 90);

    glVertex2f(52.49252, 25.48138);
    glVertex2f(52.68169, 25.2243);
    glVertex2f(52.64773, 25.07393);
    glVertex2f(52.50222, 25.00117);
    glVertex2f(52.29364, 25.03513);
    glVertex2f(52.18208, 25.25825);

    glEnd();






    //ahirt
    glBegin(GL_POLYGON);
    glColor3ub(135, 206, 150);


    glVertex2f(52.31209, 25.37068);
    glVertex2f(52.96893, 25.22866);
    glVertex2f(53.48374, 25.42394);
    glVertex2f(53.39498, 25.72573);
    glVertex2f(50.60787, 25.86774);
    glVertex2f(52.06356, 26.52458);
    glVertex2f(51.37122, 26.64885);
    glVertex2f(50.8787, 26.4066);
    glVertex2f(50.75014, 25.86668);
    glVertex2f(51.092, 23.95189);
    glVertex2f(52.45003, 23.92742);

    glEnd();


    //pant
    glBegin(GL_POLYGON);
    glColor3ub(0, 0, 128);


    glVertex2f(52, 23);
    glVertex2f(52.67279, 22.16123);
    glVertex2f(52.49777, 20.29957);
    glVertex2f(53.29335, 20.12454);
    glVertex2f(53.30926, 22.08167);
    glVertex2f(53.11832, 22.73405);
    glVertex2f(52.45003, 23.92742);
    glVertex2f(51, 24);
    glVertex2f(51.31731, 22.71353);
    glVertex2f(51.38395, 22.08167);
    glVertex2f(50.95434, 20.58598);
    glVertex2f(51.7181, 20.44277);
    glVertex2f(52.08406, 22.22488);
    glEnd();


      //leftstick
    bline(53.63946, 25.41318,55.25742, 20.36631, 2, 70, 80, 90);




    //snow board
    bline(56.73009, 18.72512,48.62813, 20.52786, 2, 70, 80, 90);
    bline(56.73009, 18.72512,57.22739, 19.11882, 2, 70, 80, 90);
    bline(48.15154, 20.94228,48.62813, 20.52786, 2, 70, 80, 90);

    glPopMatrix();

    }


void btrianglet(){



btriangle (52.699118639542064, 28.614256114652704, 56.13127, 20.34799,53.23495, 18.35416,  0, 60, 19);

}

void bdisplay()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    bsun();
    bcloud();
    bmountain();
    bshading();
    bsnot1();
    btree1();
    btree2();
    bpiller();
    blift();
      btrianglet();
     bman();
       bhouse();
     btree3();

    glutSwapBuffers();
    glFlush();


}

void bkeyboard(unsigned char key, int x, int y)
{
    switch (key)
    {

    case 'a'://press a to slow truck
        bmanSpeed -= 0.03f;
        break;

    case 'd'://press b to fast truck
        bmanSpeed += 0.05f;
        break;
    }

    switch (key)
    {

    case 's'://press a to slow truck
        bliftSpeed -= 0.03f;
        break;

    case 'w'://press b to fast truck
        bliftSpeed += 0.05f;
        break;
    }


}

/*

*/

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(1620, 1080);
    glutCreateWindow("Snow bmountain");


    glClearColor(0.53f, 0.81f, 0.92f, 1.0f);


    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(10.0, 130.0, 10.0, 78.0);
    glMatrixMode(GL_MODELVIEW);

    glutDisplayFunc(bdisplay);
    glutKeyboardFunc(bkeyboard);
      glutTimerFunc(16, updateblift, 0);
    //glutTimerFunc(10, update, 0);
    glutTimerFunc(10, updatebman, 0);



    glutMainLoop();

    return 0;
}
